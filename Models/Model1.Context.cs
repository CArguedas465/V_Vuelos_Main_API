//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace V_Vuelos_Main_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class V_Vuelos_Main_NotEncryptedEntities : DbContext
    {
        public V_Vuelos_Main_NotEncryptedEntities()
            : base("name=V_Vuelos_Main_NotEncryptedEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aerolinea> Aerolinea { get; set; }
        public virtual DbSet<Bitacora> Bitacora { get; set; }
        public virtual DbSet<Boleto> Boleto { get; set; }
        public virtual DbSet<ClienteToken> ClienteToken { get; set; }
        public virtual DbSet<ClienteWeb> ClienteWeb { get; set; }
        public virtual DbSet<Consecutivo> Consecutivo { get; set; }
        public virtual DbSet<Error> Error { get; set; }
        public virtual DbSet<EstadoPuerta> EstadoPuerta { get; set; }
        public virtual DbSet<EstadoVuelo> EstadoVuelo { get; set; }
        public virtual DbSet<FormaPago> FormaPago { get; set; }
        public virtual DbSet<Operacion> Operacion { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Pregunta> Pregunta { get; set; }
        public virtual DbSet<Puerta> Puerta { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tarjeta> Tarjeta { get; set; }
        public virtual DbSet<TipoTarjeta> TipoTarjeta { get; set; }
        public virtual DbSet<TipoTransaccion> TipoTransaccion { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Vuelo> Vuelo { get; set; }
    
        public virtual int seed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("seed");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> usf_base64_encode(string value)
        {
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usf_base64_encode", valueParameter);
        }
    
        public virtual int uspAgregarAerolinea(string nombre, byte[] imagen, string pais)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarAerolinea", nombreParameter, imagenParameter, paisParameter);
        }
    
        public virtual int uspAgregarBoleto(Nullable<decimal> formaPago, Nullable<decimal> tipoTransaccion, string vuelo, string cliente, string precio)
        {
            var formaPagoParameter = formaPago.HasValue ?
                new ObjectParameter("formaPago", formaPago) :
                new ObjectParameter("formaPago", typeof(decimal));
    
            var tipoTransaccionParameter = tipoTransaccion.HasValue ?
                new ObjectParameter("tipoTransaccion", tipoTransaccion) :
                new ObjectParameter("tipoTransaccion", typeof(decimal));
    
            var vueloParameter = vuelo != null ?
                new ObjectParameter("vuelo", vuelo) :
                new ObjectParameter("vuelo", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarBoleto", formaPagoParameter, tipoTransaccionParameter, vueloParameter, clienteParameter, precioParameter);
        }
    
        public virtual int uspAgregarConsecutivo(Nullable<decimal> valor, string descripcion, string prefijo, string rangoInicial, string rangoFinal)
        {
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var prefijoParameter = prefijo != null ?
                new ObjectParameter("prefijo", prefijo) :
                new ObjectParameter("prefijo", typeof(string));
    
            var rangoInicialParameter = rangoInicial != null ?
                new ObjectParameter("rangoInicial", rangoInicial) :
                new ObjectParameter("rangoInicial", typeof(string));
    
            var rangoFinalParameter = rangoFinal != null ?
                new ObjectParameter("rangoFinal", rangoFinal) :
                new ObjectParameter("rangoFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarConsecutivo", valorParameter, descripcionParameter, prefijoParameter, rangoInicialParameter, rangoFinalParameter);
        }
    
        public virtual int uspAgregarError(string fecha, string hora, string numeroDeError, string mensajeDeError)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var numeroDeErrorParameter = numeroDeError != null ?
                new ObjectParameter("numeroDeError", numeroDeError) :
                new ObjectParameter("numeroDeError", typeof(string));
    
            var mensajeDeErrorParameter = mensajeDeError != null ?
                new ObjectParameter("mensajeDeError", mensajeDeError) :
                new ObjectParameter("mensajeDeError", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarError", fechaParameter, horaParameter, numeroDeErrorParameter, mensajeDeErrorParameter);
        }
    
        public virtual int uspAgregarPais(string nombre, byte[] imagen)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarPais", nombreParameter, imagenParameter);
        }
    
        public virtual int uspAgregarPuerta(string nombre, Nullable<decimal> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarPuerta", nombreParameter, estadoParameter);
        }
    
        public virtual int uspAgregarTarjeta(string numeroDeTarjeta, string fechaExpiracion, Nullable<decimal> tipoTarjeta, string cliente, string cvv)
        {
            var numeroDeTarjetaParameter = numeroDeTarjeta != null ?
                new ObjectParameter("numeroDeTarjeta", numeroDeTarjeta) :
                new ObjectParameter("numeroDeTarjeta", typeof(string));
    
            var fechaExpiracionParameter = fechaExpiracion != null ?
                new ObjectParameter("fechaExpiracion", fechaExpiracion) :
                new ObjectParameter("fechaExpiracion", typeof(string));
    
            var tipoTarjetaParameter = tipoTarjeta.HasValue ?
                new ObjectParameter("tipoTarjeta", tipoTarjeta) :
                new ObjectParameter("tipoTarjeta", typeof(decimal));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            var cvvParameter = cvv != null ?
                new ObjectParameter("cvv", cvv) :
                new ObjectParameter("cvv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarTarjeta", numeroDeTarjetaParameter, fechaExpiracionParameter, tipoTarjetaParameter, clienteParameter, cvvParameter);
        }
    
        public virtual int uspAgregarUsuario(string nombreUsuario, string contrasena, string correo, Nullable<decimal> rol, Nullable<decimal> preguntaSeguridad, string respuestaSeguridad)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(decimal));
    
            var preguntaSeguridadParameter = preguntaSeguridad.HasValue ?
                new ObjectParameter("preguntaSeguridad", preguntaSeguridad) :
                new ObjectParameter("preguntaSeguridad", typeof(decimal));
    
            var respuestaSeguridadParameter = respuestaSeguridad != null ?
                new ObjectParameter("respuestaSeguridad", respuestaSeguridad) :
                new ObjectParameter("respuestaSeguridad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarUsuario", nombreUsuarioParameter, contrasenaParameter, correoParameter, rolParameter, preguntaSeguridadParameter, respuestaSeguridadParameter);
        }
    
        public virtual int uspAgregarVuelo(string fecha_partida, string hora_partida, string fecha_llegada, string hora_llegada, string aerolinea, string puerta, Nullable<decimal> estado, string parteDe, string llegaA)
        {
            var fecha_partidaParameter = fecha_partida != null ?
                new ObjectParameter("fecha_partida", fecha_partida) :
                new ObjectParameter("fecha_partida", typeof(string));
    
            var hora_partidaParameter = hora_partida != null ?
                new ObjectParameter("hora_partida", hora_partida) :
                new ObjectParameter("hora_partida", typeof(string));
    
            var fecha_llegadaParameter = fecha_llegada != null ?
                new ObjectParameter("fecha_llegada", fecha_llegada) :
                new ObjectParameter("fecha_llegada", typeof(string));
    
            var hora_llegadaParameter = hora_llegada != null ?
                new ObjectParameter("hora_llegada", hora_llegada) :
                new ObjectParameter("hora_llegada", typeof(string));
    
            var aerolineaParameter = aerolinea != null ?
                new ObjectParameter("aerolinea", aerolinea) :
                new ObjectParameter("aerolinea", typeof(string));
    
            var puertaParameter = puerta != null ?
                new ObjectParameter("puerta", puerta) :
                new ObjectParameter("puerta", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(decimal));
    
            var parteDeParameter = parteDe != null ?
                new ObjectParameter("parteDe", parteDe) :
                new ObjectParameter("parteDe", typeof(string));
    
            var llegaAParameter = llegaA != null ?
                new ObjectParameter("llegaA", llegaA) :
                new ObjectParameter("llegaA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAgregarVuelo", fecha_partidaParameter, hora_partidaParameter, fecha_llegadaParameter, hora_llegadaParameter, aerolineaParameter, puertaParameter, estadoParameter, parteDeParameter, llegaAParameter);
        }
    
        public virtual int uspBorrarAerolinea(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarAerolinea", idParameter);
        }
    
        public virtual int uspBorrarBoleto(string idBoleto)
        {
            var idBoletoParameter = idBoleto != null ?
                new ObjectParameter("idBoleto", idBoleto) :
                new ObjectParameter("idBoleto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarBoleto", idBoletoParameter);
        }
    
        public virtual int uspBorrarPais(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarPais", idParameter);
        }
    
        public virtual int uspBorrarPuerta(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarPuerta", idParameter);
        }
    
        public virtual int uspBorrarTarjeta(string numeroDeTarjeta)
        {
            var numeroDeTarjetaParameter = numeroDeTarjeta != null ?
                new ObjectParameter("numeroDeTarjeta", numeroDeTarjeta) :
                new ObjectParameter("numeroDeTarjeta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarTarjeta", numeroDeTarjetaParameter);
        }
    
        public virtual int uspBorrarUsuario(string nombreUsuario)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarUsuario", nombreUsuarioParameter);
        }
    
        public virtual int uspBorrarVuelo(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBorrarVuelo", idParameter);
        }
    
        public virtual int uspCambiarContrasenaUsuario(string nombreUsuario, string nuevaContrasena)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var nuevaContrasenaParameter = nuevaContrasena != null ?
                new ObjectParameter("nuevaContrasena", nuevaContrasena) :
                new ObjectParameter("nuevaContrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCambiarContrasenaUsuario", nombreUsuarioParameter, nuevaContrasenaParameter);
        }
    
        public virtual int uspEditarAerolinea(string id, string nombre, byte[] imagen)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspEditarAerolinea", idParameter, nombreParameter, imagenParameter);
        }
    
        public virtual int uspEditarUsuario(string nombreUsuario, string correo, Nullable<decimal> rol)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspEditarUsuario", nombreUsuarioParameter, correoParameter, rolParameter);
        }
    
        public virtual int uspEditarVuelo(string id, string fecha_partida, string hora_partida, string fecha_llegada, string hora_llegada, string aerolinea, string pais, string puerta, Nullable<decimal> estado, string parteDe, string llegaA)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fecha_partidaParameter = fecha_partida != null ?
                new ObjectParameter("fecha_partida", fecha_partida) :
                new ObjectParameter("fecha_partida", typeof(string));
    
            var hora_partidaParameter = hora_partida != null ?
                new ObjectParameter("hora_partida", hora_partida) :
                new ObjectParameter("hora_partida", typeof(string));
    
            var fecha_llegadaParameter = fecha_llegada != null ?
                new ObjectParameter("fecha_llegada", fecha_llegada) :
                new ObjectParameter("fecha_llegada", typeof(string));
    
            var hora_llegadaParameter = hora_llegada != null ?
                new ObjectParameter("hora_llegada", hora_llegada) :
                new ObjectParameter("hora_llegada", typeof(string));
    
            var aerolineaParameter = aerolinea != null ?
                new ObjectParameter("aerolinea", aerolinea) :
                new ObjectParameter("aerolinea", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var puertaParameter = puerta != null ?
                new ObjectParameter("puerta", puerta) :
                new ObjectParameter("puerta", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(decimal));
    
            var parteDeParameter = parteDe != null ?
                new ObjectParameter("parteDe", parteDe) :
                new ObjectParameter("parteDe", typeof(string));
    
            var llegaAParameter = llegaA != null ?
                new ObjectParameter("llegaA", llegaA) :
                new ObjectParameter("llegaA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspEditarVuelo", idParameter, fecha_partidaParameter, hora_partidaParameter, fecha_llegadaParameter, hora_llegadaParameter, aerolineaParameter, paisParameter, puertaParameter, estadoParameter, parteDeParameter, llegaAParameter);
        }
    
        public virtual int uspModificarConsecutivo(Nullable<decimal> id, string descripcion, string prefijo, string rangoFinal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var prefijoParameter = prefijo != null ?
                new ObjectParameter("prefijo", prefijo) :
                new ObjectParameter("prefijo", typeof(string));
    
            var rangoFinalParameter = rangoFinal != null ?
                new ObjectParameter("rangoFinal", rangoFinal) :
                new ObjectParameter("rangoFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspModificarConsecutivo", idParameter, descripcionParameter, prefijoParameter, rangoFinalParameter);
        }
    
        public virtual ObjectResult<uspRecuperarAerolineaPorPais_Result> uspRecuperarAerolineaPorPais(string idPais)
        {
            var idPaisParameter = idPais != null ?
                new ObjectParameter("idPais", idPais) :
                new ObjectParameter("idPais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarAerolineaPorPais_Result>("uspRecuperarAerolineaPorPais", idPaisParameter);
        }
    
        public virtual ObjectResult<uspRecuperarAerolineas_Result> uspRecuperarAerolineas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarAerolineas_Result>("uspRecuperarAerolineas");
        }
    
        public virtual ObjectResult<uspRecuperarBitacora_Result> uspRecuperarBitacora()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarBitacora_Result>("uspRecuperarBitacora");
        }
    
        public virtual ObjectResult<uspRecuperarConsecutivos_Result> uspRecuperarConsecutivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarConsecutivos_Result>("uspRecuperarConsecutivos");
        }
    
        public virtual ObjectResult<uspRecuperarEstadosPuerta_Result> uspRecuperarEstadosPuerta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarEstadosPuerta_Result>("uspRecuperarEstadosPuerta");
        }
    
        public virtual ObjectResult<uspRecuperarEstadosVuelo_Result> uspRecuperarEstadosVuelo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarEstadosVuelo_Result>("uspRecuperarEstadosVuelo");
        }
    
        public virtual ObjectResult<uspRecuperarFormasDePago_Result> uspRecuperarFormasDePago()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarFormasDePago_Result>("uspRecuperarFormasDePago");
        }
    
        public virtual ObjectResult<uspRecuperarPaises_Result> uspRecuperarPaises()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarPaises_Result>("uspRecuperarPaises");
        }
    
        public virtual ObjectResult<uspRecuperarPreguntasSeguridad_Result> uspRecuperarPreguntasSeguridad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarPreguntasSeguridad_Result>("uspRecuperarPreguntasSeguridad");
        }
    
        public virtual ObjectResult<uspRecuperarPuertas_Result> uspRecuperarPuertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarPuertas_Result>("uspRecuperarPuertas");
        }
    
        public virtual ObjectResult<uspRecuperarPuertasActivas_Result> uspRecuperarPuertasActivas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarPuertasActivas_Result>("uspRecuperarPuertasActivas");
        }
    
        public virtual ObjectResult<uspRecuperarRoles_Result> uspRecuperarRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarRoles_Result>("uspRecuperarRoles");
        }
    
        public virtual ObjectResult<uspRecuperarTiposTransaccion_Result> uspRecuperarTiposTransaccion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarTiposTransaccion_Result>("uspRecuperarTiposTransaccion");
        }
    
        public virtual ObjectResult<uspRecuperarUsuario_Especifico_Result> uspRecuperarUsuario_Especifico(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarUsuario_Especifico_Result>("uspRecuperarUsuario_Especifico", idUsuarioParameter);
        }
    
        public virtual ObjectResult<uspRecuperarUsuario_General_Result> uspRecuperarUsuario_General()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarUsuario_General_Result>("uspRecuperarUsuario_General");
        }
    
        public virtual ObjectResult<uspRecuperarVuelos_Result> uspRecuperarVuelos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspRecuperarVuelos_Result>("uspRecuperarVuelos");
        }
    }
}
